<?php

class wordpress_showtime_slideshow {
	var $gid = 0;
	
	function wp_gallery_st_shortcut($attr, $type) {
		global $post;
		global $wp_version;
		global $stOptions;
		
		$attributes = $attr;
		
		if ( $type )
			$slide = 1;
		else
			$slide = 0;
		
		$height = get_option( 'st_height' );
		$width = get_option( 'st_width' );
		$bgcolor = get_option( 'st_bgcolor' );
		$quality = get_option( 'st_quality' );
		$wmode = get_option( 'st_wmode' );
	
		$transition = get_option( 'st_transition' );
		$transitiontime = get_option( 'st_transitiontime' );
		$transitionease = get_option( 'st_easeFunc' ).get_option( 'st_ease' );
		$rotationtime = get_option( 'st_rotatetime' );
		
		$showcontrols = get_option( 'st_showcontrols' );
		$fullscreen = get_option( 'st_fullscreen' );
		$showtext = get_option( 'st_showtext' );
		$autoplay = get_option( 'st_autoplay' );
		$shuffle = get_option( 'st_shuffle' );
		$scale = get_option( 'st_scalemode' );
	
		$reverse = get_option( 'st_reverse' );
		$imgSize=get_option( 'st_imgsize' );
		$imgFullSize=get_option( 'st_imgfullsize' );
	

	extract(shortcode_atts(array(
		'id'         		=> $post->ID,
		'width'				=> $width,
		'height'         	=> $height,
		'bgcolor'         	=> $bgcolor,
		'quality'         	=> $quality,
		'wmode'         	=> $wmode,
		
		'rotationtime'		=> $rotationtime,
		'transition'		=> $transition,
		'transitiontime'	=> $transitiontime,
		'transitionease'	=> $transitionease,
		'autoplay'			=> $autoplay,
		'showcontrols'		=> $showcontrols,
		'fullscreen'		=> $fullscreen,
		'showtext'			=> $showtext,
		'shuffle'			=> $shuffle,
		'scale'				=> $scale,
		
		'reverse'			=> $reverse,
		'source'			=> $imgSize,
		'sourcehd'			=> $imgFullSize
	), $attr));		
	
	
		$id = intval($id);
			
		$classid = 'st_' . $this->gid;
		$this->gid++;
				
		if ( function_exists( 'gallery_shortcode' ) ) {
			$gallery = gallery_shortcode( $attributes );
		}
		
	
		if ( $slide )
			$output = "
			<!-- generated by showtime WP plugin -->
			<script type='text/javascript'>
			
				var flashvars = {
					
				xml 			: '" . plugins_url($path = $stOptions->_pluginSubfolderName . '/showtime/getxml.php') . "?id=$id&source=$source&sourcehd=$sourcehd&reverse=$reverse',
				
				width 			: '$width',
				height 			: '$height',
				classid 		: '$classid',

				rotationtime	: '$rotationtime',
				transition		: '$transition',
				transitiontime	: '$transitiontime',
				transitionease	: '$transitionease',
				autoplay		: '$autoplay',
				showcontrols	: '$showcontrols',
				fullscreen		: '$fullscreen',
				showtext		: '$showtext',
				shuffle			: '$shuffle',
				scale			: '$scale'			
				
				
				};
				
				var params = {};
				params.allowFullScreen = 'true';
				params.bgcolor = '$bgcolor';		
				params.quality = '$quality';		
				params.wmode = '$wmode';
			
				var attributes = {};
				attributes.styleclass = 'showtime';
												
				swfobject.embedSWF ('" . plugins_url($path = $stOptions->_pluginSubfolderName . '/showtime/st13.swf') . "', '" . $classid . "', '$width', '$height', '9.0.0', false, flashvars, params, attributes);
			</script>
	
					
			<!-- alternative content -->	
			<div id='" . $classid . "'>$gallery</div>
					
			\n";
		else
			$output = "<div class='gallery' id='gallery_" . $this->gid . "'>
							$gallery
						</div>
					\n";
					
		
						
		return $output;
	}

	
	
	function checkOn( $string ) {
		
		if ( $string == "on" || $string == "true" || $string == "yes" ) {
			return "true";
		} else {
			return "false";
		}
		
	}
	
	function addToHeader() {
		global $stOptions;
		wp_enqueue_script( 'swfobject', plugins_url($path = $stOptions->_pluginSubfolderName . '/showtime/swfobject/swfobject.js'), false );
		//wp_enqueue_script( 'flash_resize', plugins_url($path = $stOptions->_pluginSubfolderName . '/include/flash_resize.js'), false );	
	}
	
	function encode($x) {
	    return base64_encode(rawurlencode($x));
	}

	
	function wp_gallery_st_own_shortcut($attr) {
		return $this->wp_gallery_st_shortcut($attr, 1);
	}
	
}

?>